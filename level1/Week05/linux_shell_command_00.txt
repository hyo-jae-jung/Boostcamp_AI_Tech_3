Vary Important Shell Command [man, mkdir, ls, pwd, cd, echo, vi, bash, sudo, cp, mv, cat, clear, history, find, export, alias, wget]

man : 쉘 커맨드의 매뉴얼 문서를 보고 싶은 경우
ex) man python, man pip

mkdir : 폴더 생성하기(Make Directory)
ex) mkdir directoryName

ls : 현재 접근한 폴더의 폴더, 파일 확인(List Segments)

    -a : .으로 시작하는 파일, 폴더를 포함해 전체 파일 출력
    -l : 퍼미션, 소유자, 만든 날짜, 용량까지 출력
    -h : 용량을 사람이 읽기 쉽도록 GB, MB 등 표현. `-l`과 같이 사용

    * 이런 명령어가 한두개가 아닌데 확인하는 방법? -> man ls
    * ls -lh가 보기 좋은데 alias에 ll로 명령어가 지정됨
    * ls ~ 를 하면 어딘가에 있는 파일과 폴더를 보여주는데 어디냐면 사용자 디랙토리다.
    * ~ 를 입력하면 사용자 디랙토리로 이동한다.

pwd : 현재 폴더 경로를 절대 경로로 보여줌(Print Working Directory)

    * man pwd를 해보면 별거 안나온다.

cd : 폴더 변경하기, 폴더로 이동하기(Change Directory)

    * 그냥 cd만 입력하면 사용자 디랙토리로 이동한다.
    * cd ..을 입력하면 상위 디랙토리로 이동
    * man cd -> cd에 대한 매뉴얼은 없다고 한다.

echo : 터미널에 텍스트 출력

    * man echo로 매뉴얼 확인가능
---------------------------------------------------------------------
alias를 만지다보니 알게됐는데
그냥 d를 입력하면 내가 이동했던 최근 디랙토리를 순서대로 저장하고 있는데
해당 번호를 입력하면 그 디랙토리로 이동한다.
---------------------------------------------------------------------
    * python의 print처럼 사용되는듯
    * 매뉴얼에 설명이 있지만 [echo -e ""] -e를 해줘야 ""안의 백슬래쉬를 해석

vim, vi : 터미널 환경에서 파일을 생성, 편집하는 도구(편집기에서 작성)

    vim or vi 파일이름 <- 파일생성 or 파일열기

    편집기로 파일을 열면 3가지 모드가 있다.
    - Command Mode
    - Insert Mode
    - Last Line Mode

    파일을 읽어오면 command mode로 읽는다. 여기서는 몇가지 커멘드로 편집을 할 수 있다.(커멘드는 검색하면 나옴)
    command mode에서 a나 i를 입력하면 insert mode로 변하는데 이 때 자유롭게 편집을 할 수 있다.
    insert mode를 빠져나오려면 esc를 입력.
    빠져나오면 다시 command mode인데 :를 입력하면 last line mode가 되는데 편집기를 빠져나올 수 있다.
    - :q 는 저장 안하고 빠져나오기
    - :wq 는 저장하고 빠져나오기
    - :q! 는 강제로 빠져나오기
    - :wq! 는 강제로 저장하고 빠져나오기 
    * !가 강제하는 명령어라는 걸 알 수 있다.

    last line mode에서 set number와 set nonumber로 줄번호를 표시, 제거 할 수 있다.

bash : bash shell script가 실행됨

    * 자세한 내용은 구글링을 해봐야 할 듯

sudo : 최고 권한 유저로 프로그램을 실행

    * 커맨드 앞에 sudo 붙이면 다 뚤리는데 조심해서 사용해야함

cp : 파일 또는 폴더 복사하기(Copy)

    cp [존재하는 파일이름] [복사할 파일이름]

mv : 파일, 폴더 이동하기 또는 이름 바꿀 때도 활용(Move)

    mv [기존 파일 주소 및 이름] [새로운 파일 주소 및 새로운 이름]

cat : 특정 파일 내용 출력(concatenate)

    1. 여러개의 파일을 한번에 출력
    cat file1 file2 file3

    2. 여러개의 파일을 합쳐서 하나의 파일을 만듬. 존재하는 파일에 합치면 기존 내용이 삭제된다.
    cat file1 file2 file3 > file4

    3. 내용 덧붙이기
    cat file1 >> file2 # file2의 내용이 사라지지 않고 file1의 내용이 추가된다.

    4. 새로운 파일 생성
    cat > file5
    내용입력
    ctrl+d 내용입력 종료 후 파일 생성

clear : 터미널창을 깨끗하게 해준다.

history : 최근에 입력한 쉘 커맨드 history를 출력. !+숫자 로 해당 위치의 커맨드 다시 활용 가능

find : 파일 및 디렉토리를 검색할 때 사용

    find . -name "file" : 현재 폴더에서 file이란 이름을 가지는 파일 및 디렉토리 검색
    * 굉장히 많은 검색규칙이 있다.
        . or / : 현재 디렉토리 or root 디렉토리를
        -name : 파일 이름과 관련된
        "*file" : 파일이름 뒤에 file이 있는 파일

        등등 매우 많다. 검색하면 나옴

export : 환경 변수 설정

    export water="물"
    echo $water
    >>>물

    export로 설정한 환경변수는 터미널이 꺼지면 사라진다.
    매번 쉘을 실행할 때마다 환경변수를 저장하고 싶으면 .bashrc, .zshrc에 저장하면 된다.
    터미널 재실행 없이 바로 적용된 환경변수를 사용하려면 source ~/.zshrc를 사용하면 된다.

alias : 기본 명령어른 간단히 줄일 수 있는 것

    alias를 입력해보면 ls -lh가 ll로 등록된 것을 확인 할 수 있다.
    등록방법은 alias [alias명]] = [기본 명령어]
    삭제방법은 unalias [alias명]]

wget : Web Get의 약어로 웹 상의 파일ㅇ르 다운로드 받을 때 사용하는 명령어로 자세한 건 구글링


    
    
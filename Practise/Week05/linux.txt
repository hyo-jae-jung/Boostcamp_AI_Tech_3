Shell Command

man : 쉘 커맨드의 매뉴얼 문서를 보고 싶은 경우
ex) man python, man pip

mkdir : 폴더 생성하기(Make Directory)
ex) mkdir directoryName

ls : 현재 접근한 폴더의 폴더, 파일 확인(List Segments)

    -a : .으로 시작하는 파일, 폴더를 포함해 전체 파일 출력
    -l : 퍼미션, 소유자, 만든 날짜, 용량까지 출력
    -h : 용량을 사람이 읽기 쉽도록 GB, MB 등 표현. `-l`과 같이 사용

    * 이런 명령어가 한두개가 아닌데 확인하는 방법? -> man ls
    * ls -lh가 보기 좋은데 alias에 ll로 명령어가 지정됨
    * ls ~ 를 하면 어딘가에 있는 파일과 폴더를 보여주는데 어디냐면 사용자 디랙토리다.
    * ~ 를 입력하면 사용자 디랙토리로 이동한다.

pwd : 현재 폴더 경로를 절대 경로로 보여줌(Print Working Directory)

    * man pwd를 해보면 별거 안나온다.

cd : 폴더 변경하기, 폴더로 이동하기(Change Directory)

    * 그냥 cd만 입력하면 사용자 디랙토리로 이동한다.
    * cd ..을 입력하면 상위 디랙토리로 이동
    * man cd -> cd에 대한 매뉴얼은 없다고 한다.

echo : 터미널에 텍스트 출력

    * man echo로 매뉴얼 확인가능
---------------------------------------------------------------------
alias를 만지다보니 알게됐는데
그냥 d를 입력하면 내가 이동했던 최근 디랙토리를 순서대로 저장하고 있는데
해당 번호를 입력하면 그 디랙토리로 이동한다.
---------------------------------------------------------------------
    * python의 print처럼 사용되는듯
    * 매뉴얼에 설명이 있지만 [echo -e ""] -e를 해줘야 ""안의 백슬래쉬를 해석

vim, vi : 터미널 환경에서 파일을 생성, 편집하는 도구(편집기에서 작성)

    vim or vi 파일이름 <- 파일생성 or 파일열기

    편집기로 파일을 열면 3가지 모드가 있다.
    - Command Mode
    - Insert Mode
    - Last Line Mode

    파일을 읽어오면 command mode로 읽는다. 여기서는 몇가지 커멘드로 편집을 할 수 있다.(커멘드는 검색하면 나옴)
    command mode에서 a나 i를 입력하면 insert mode로 변하는데 이 때 자유롭게 편집을 할 수 있다.
    insert mode를 빠져나오려면 esc를 입력.
    빠져나오면 다시 command mode인데 :를 입력하면 last line mode가 되는데 편집기를 빠져나올 수 있다.
    - :q 는 저장 안하고 빠져나오기
    - :wq 는 저장하고 빠져나오기
    - :q! 는 강제로 빠져나오기
    - :wq! 는 강제로 저장하고 빠져나오기 
    * !가 강제하는 명령어라는 걸 알 수 있다.

    last line mode에서 set number와 set nonumber로 줄번호를 표시, 제거 할 수 있다.







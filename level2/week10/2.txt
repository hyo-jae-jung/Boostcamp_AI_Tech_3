1. 접근전략
2-stage detector
[R-CNN]
(1) 이미지에서 객체를 선택하는 기능
(2) 객체의 classification 기능

이렇게 두가지 기능이 필요한데 (1)은 
Sliding Window, Selective Search 등이 있다.
Sliding Window는 매우 비효율적
Selective Search는 작은 패치를 비슷한 패치로 모아서 bbox로 만듬

image입력
selective search로 후보 객체 선택
각 객체를 wapping해서 image size를 일치시킴
CNN통과시키기
SVM통과시키기
객체의 위치와 bbox 싱크로 맞추기

후보 bbox마다 cnn을 통과시켜야 해서 매우 느림

[Spatial Pyramid Pooling]
SPP는 1번의 cnn을 통과시키고
spp를 통과시키는데
spp는 bbox의 크기를 다양하게 하는 kernel을 만들고 각 kernel의 각기 다른 bbox를 만들어서 전부 concat시킴

이걸 하면 후보 개수만큼 cnn통과시키는 문제 해결
강제 warping문제 해결


[fast R-CNN]


[faster R-CNN]

RPN(Region Proposal Network)
 


lr_decay : https://stackoverflow.com/questions/57531409/how-is-learning-rate-decay-implemented-by-adam-in-keras
weight_decay : https://sanghyu.tistory.com/88

